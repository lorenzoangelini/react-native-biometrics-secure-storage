package com.reactnativebiometricssecurestorage.tasks

import android.os.AsyncTask
import android.os.Build
import android.util.Log
import androidx.annotation.RequiresApi
import com.facebook.react.bridge.Promise
import com.reactnativebiometricssecurestorage.SecureDataHandler

class DecryptFileTask(promise: Promise, filePath: String) : AsyncTask<Void?, Void?, Void?>() {
  private val promise: Promise
  private val filePath: String

  @RequiresApi(api = Build.VERSION_CODES.M)
  protected fun doInBackground(vararg voids: Void?): Void? {
    val startTime: Long = java.lang.System.currentTimeMillis()
    try {
      val decryptedData: String = SecureDataHandler.getInstance().loadFileAndDecryptData(filePath)
      Log.d("[SecureAuthModule]", String.format("Data for filePath %s decrypted successfully", filePath))
      promise.resolve(decryptedData)
    } catch (e: java.lang.Exception) {
      Log.e("[SecureAuthModule]", e.message, e)
      promise.reject(e)
    } finally {
      val stopTime: Long = java.lang.System.currentTimeMillis()
      Log.d("[SecureAuthModule]", String.format("Decryption required %f", (stopTime.toDouble() - startTime) / 1000))
    }
    return null
  }

  init {
    this.promise = promise
    this.filePath = filePath
  }
}
